security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: email
    role_hierarchy:
        ROLE_ADMIN: ROLE_ADMIN
        ROLE_USER: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ALLOW_TO_SWITCH

    firewalls:
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: user_provider
            json_login:
                check_path:     /api/login_check
                require_previous_session: false
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
#        backoffice:
#            pattern: /login_admin
#            stateless: true
#            anonymous: lazy
#            form_login:
#                login_path: login_admin
#                check_path: login_admin
#            guard:
#                authenticators:
#                    - App\Security\AppAuthenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:   ^/
            anonymous: ~
            provider: user_provider
            logout:
                path:       logout
                target:     /login_admin
            form_login:
                login_path: login_admin
                check_path: login_admin
                username_parameter: _username
                csrf_token_generator: security.csrf.token_manager
                default_target_path: /admin/dashboard
                target_path_parameter: _target_path
                always_use_default_target_path: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/dashboard, roles: [IS_AUTHENTICATED_FULLY] }
#        - { path: ^/admin_login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
